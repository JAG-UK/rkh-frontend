FROM node:18-alpine AS builder

WORKDIR /app

COPY package*.json ./

RUN npm ci

COPY . .

# Accept build arguments for NEXT_PUBLIC_* variables only (required at build time)
ARG NEXT_PUBLIC_APP_ENV
ARG NEXT_PUBLIC_LOCAL_TEST_NET_CHAIN_ID
ARG NEXT_PUBLIC_USE_TEST_NET
ARG NEXT_PUBLIC_META_ALLOCATOR_CONTRACT_ADDRESS
ARG NEXT_PUBLIC_GITHUB_OWNER
ARG NEXT_PUBLIC_SAFE_ADDRESS
ARG NEXT_PUBLIC_API_BASE_URL
ARG NEXT_PUBLIC_RPC_URL
ARG NEXT_PUBLIC_RPC_TOKEN

# Set NEXT_PUBLIC_* environment variables during build (these are baked in)
ENV NEXT_PUBLIC_APP_ENV=${NEXT_PUBLIC_APP_ENV:-production}
ENV NEXT_PUBLIC_LOCAL_TEST_NET_CHAIN_ID=${NEXT_PUBLIC_LOCAL_TEST_CHAIN_ID}
ENV NEXT_PUBLIC_USE_TEST_NET=${NEXT_PUBLIC_USE_TEST_NET}
ENV NEXT_PUBLIC_META_ALLOCATOR_CONTRACT_ADDRESS=${NEXT_PUBLIC_META_ALLOCATOR_CONTRACT_ADDRESS}
ENV NEXT_PUBLIC_GITHUB_OWNER=${NEXT_PUBLIC_GITHUB_OWNER}
ENV NEXT_PUBLIC_SAFE_ADDRESS=${NEXT_PUBLIC_SAFE_ADDRESS}
ENV NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
ENV NEXT_PUBLIC_RPC_URL=${NEXT_PUBLIC_RPC_URL}
ENV NEXT_PUBLIC_RPC_TOKEN=${NEXT_PUBLIC_RPC_TOKEN}

RUN npm run build

# Production Stage 

FROM node:18-alpine AS production

WORKDIR /app

# Copy the built artifacts from the builder stage
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

# Set only the essential environment variables
ENV NODE_ENV=production
ENV NEXT_PUBLIC_APP_ENV=${NEXT_PUBLIC_APP_ENV:-production}

EXPOSE 3000

CMD ["node", "server.js"]


